<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7mtf2PNfCJN3vFDicblYSk70rLAplcGy/197ODhr1qxo6NCh7v3sDTsZ7LkvY+FDuLresN5XXcc3VHYf
        bd/OQ5j3yVVScqJnhU2pDJY9HNy1a1fho2H6+3Cw66rM3m+4cOHCaPHixdGiRYsQmCVLlpy9//77OyZN
        mnTKPgaot+666y570/sb9fX1T06fPn2+jvOi0Oh+LZo6dWrDuHHjnqqurj5qa3IAn0phL3H4Wyk50bPC
        plQGyx4ONjY2Fj4qxn5Cefczjn2N/USzE6Lr4WXXh/ohLJ2funFq9+7dZ+3zzProtL72da2Z16QjRHYe
        6d8DS5cu/b7W5P7+rOciFVJyomeFTakMVnt7e+HlDBadvv520L7G3rozc+bMwpWavUreooVw2TobiOJP
        MQ2N3T9bhx0dHSdmzZr1+JAhQ44N4OHhOCk50bPCplQG68iRI9HGjRv79QbnroeCq1evLmzH3jjt/X8A
        SbE12LmmV9xyyy1bB3CVdY+UnOhZYVOqg2VPWvY1WLYYtCiidevWFa6uvO0DSbNz6eWXX26cNGnS5gG8
        eX+alJzoWWFTboO1du1agoVg2PN1TU1NjXfcccdLBMtnE8Fytg8krTNYWxWsgVxh3SclJ3pW2ESwnO0D
        SSNY5dlEsJztA0kjWOXZRLCc7QNJI1jl2USwnO0DSSNY5dlEsJztA0kjWOXZRLCc7QNJI1jl2USwnO0D
        SSNY5dlEsJztA0kjWOXZRLCc7QNJI1jl2USwnO0DSSNY5dlEsJztA0kjWOXZRLCc7QNJI1jl2USwnO0D
        SSNY5dlEsJztA0kjWOXZRLCc7QNJI1jl2USwnO0DSSNY5dlEsJztA0kjWOXZRLCc7QNJI1jl2USwnO0D
        SSNY5dlEsJztA0kjWOXZRLCc7QNJI1jl2USwnO0DSSNY5dlEsJztA0kjWOXZRLCc7QNJI1jl2USwnO0D
        SSNY5dlEsJztA0kjWOXZRLCc7QNJI1jl2USwnO0DSSNY5dlEsJztA0kjWOXZRLCc7QNJI1jl2USwnO0D
        SSNY5dlEsJztA0kjWOXZRLCc7QNJI1jl2USwnO0DSSNY5dlEsJztA0kjWOXZRLCc7WeBjk9Ba2trgR0r
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>